{"version":3,"sources":["features/todos/todos.action.types.js","features/todos/todos.reducer.js","store/rootReducer.js","store/store.js","components/AddTodo.js","components/Header.js","components/Todo.js","components/List.js","components/Indicators.js","components/TodoAddedNotification.js","containers/App.js","features/todos/todos.actions.js","index.js"],"names":["ADD_TODO","MARK_TODO","DELETE_TODO","initialState","todosReducer","state","action","type","id","length","name","payload","completed","filter","todo","map","combineReducers","todos","persistConfig","key","storage","persistedReducer","persistReducer","rootReducer","store","createStore","persistor","persistStore","AddTodo","addTodo","useState","value","setValue","addNewTodo","className","onKeyPress","e","onChange","inputEvent","target","placeholder","onClick","disabled","Header","Todo","deleteTodo","markTodoAsCompleted","done","checked","List","listItems","Indicators","nTodos","nCompleted","percent","progressStyle","width","role","style","toFixed","display","position","top","right","TodoAddedNotification","setShow","useEffect","setTimeout","connect","markTodo","showNotification","setShowNotification","reduce","n","ReactDOM","render","loading","document","querySelector"],"mappings":"uOAAaA,EAAW,iBACXC,EAAY,kBACZC,EAAc,oBCKrBC,EAAe,GAgCNC,EA9BM,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACnD,OAAQA,EAAOC,MACX,KAAKP,EACD,IAAMQ,EAAKH,EAAMI,OAAUJ,EAAMA,EAAMI,OAAS,GAAGD,GAAK,EAAK,EAE7D,MAAM,GAAN,mBACOH,GADP,CAEI,CAAGG,KAAIE,KAAMJ,EAAOK,QAASC,WAAW,KAIhD,KAAKV,EACD,IAAQM,EAAOF,EAAOK,QAAdH,GACR,OAAO,YACAH,EAAMQ,QAAO,SAAAC,GAAI,OAAIA,EAAKN,KAAOA,MAI5C,KAAKP,EACD,IAAQO,EAAOF,EAAOK,QAAdH,GACR,OAAO,YACAH,EAAMU,KAAI,SAAAD,GAAI,OAAIA,EAAKN,KAAOA,EAAZ,2BAAsBM,GAAtB,IAA4BF,WAAYE,EAAKF,YAAcE,MAIxF,QACI,OAAOT,IChCJW,cAAgB,CAAEC,U,QCG3BC,EAAgB,CAClBC,IAAK,OACLC,Q,OAAAA,GAGEC,EAAmBC,YAAeJ,EAAeK,GAG1CC,EAAQC,YAAYJ,GACpBK,EAAYC,YAAaH,G,cC6BvBI,EArCC,SAAC,GAEV,IADHC,EACE,EADFA,QAEA,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAOMC,EAAa,WACD,KAAVF,IACAF,EAAQE,GACRC,EAAS,MAQjB,OACI,qBAAKE,UAAU,MAAf,SACI,qBAAKA,UAAU,SAAf,SACI,sBAAKA,UAAU,cAAcC,WAnBlB,SAACC,GACN,UAAVA,EAAEjB,KACFc,KAiBI,UACI,uBAAO1B,KAAK,OAAOwB,MAAOA,EAAOM,SARtB,SAACC,GACxBN,EAASM,EAAWC,OAAOR,QAOgDG,UAAU,eAAeM,YAAY,gBAAgB,aAAW,kBAC/H,sBAAMN,UAAU,kBAAhB,SACI,wBAAQA,UAAU,kBAAkB3B,KAAK,SAASkC,QAASR,EAAYS,UAAWX,EAAlF,2BCvBTY,EATA,kBAEX,qBAAKT,UAAU,sDAAf,SACI,qBAAKA,UAAU,2CAAf,SACI,sBAAMA,UAAU,OAAhB,wCCqDGU,EA5CF,SAAC,GAMP,IALHpC,EAKE,EALFA,GACAE,EAIE,EAJFA,KACAE,EAGE,EAHFA,UACAiC,EAEE,EAFFA,WACAC,EACE,EADFA,oBAQMC,EAAOnC,EAAa,8BAAMF,IAAeA,EAE/C,OAEI,oBAAIwB,UAAU,kBAAd,SAEI,sBAAKA,UAAU,MAAf,UAEI,sBAAKA,UAAU,iBAAf,UACI,wBAAOA,UAAU,sDAAjB,UACI,uBAAO3B,KAAK,WAAWyC,QAASpC,EAAWsB,UAAU,uBAAuBG,SAfjE,WAC3BS,EAAoBtC,MAeJ,sBAAM0B,UAAU,gCAEpB,qBAAKA,UAAU,gBAKnB,qBAAKA,UAAU,iBAAf,SACKa,IAGL,qBAAKb,UAAU,4CAAf,SACI,wBAAQ3B,KAAK,SAAS2B,UAAU,wBAAwBO,QAAS,kBAAMI,EAAWrC,IAAlF,4BCRLyC,EA3BF,SAAC,GAAqD,IAAD,IAAlDhC,aAAkD,MAA1C,GAA0C,EAAtC4B,EAAsC,EAAtCA,WAAYC,EAA0B,EAA1BA,oBAC9BI,EAAYjC,EAAMF,KAAI,SAACD,GAAD,OACxB,cAAC,EAAD,CAEIN,GAAIM,EAAKN,GACTE,KAAMI,EAAKJ,KACXE,UAAWE,EAAKF,UAEhBiC,WAAYA,EACZC,oBAAqBA,GANhBhC,EAAKN,OAUlB,OACI,mCACMS,EAAMR,OACJ,oBAAIyB,UAAU,aAAd,SACKgB,IAGL,mBAAGhB,UAAU,gBAAb,4FCgBDiB,EA5CI,SAAC,GAAoC,IAAD,IAAjCC,cAAiC,MAAxB,EAAwB,MAArBC,kBAAqB,MAAR,EAAQ,EAC7CC,EAAYD,EAAaD,EAAU,KAAQ,EAE3CG,EAAgB,CAClBC,MAAM,GAAD,OAAKF,EAAL,MAGT,OACI,qBAAKpB,UAAU,YAAf,SACI,sBAAKA,UAAU,MAAf,UACI,qBAAKA,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,8BAA6CmB,KAC7C,qBAAKnB,UAAU,gBAAf,SACI,sBACIA,UAAU,0DACVuB,KAAK,cACL,gBAAeH,EACf,gBAAc,IACd,gBAAc,MACdI,MAAOH,EANX,UAQKD,EAAQK,QAAQ,GARrB,gBAchB,qBAAKzB,UAAU,WAAf,SACI,qBAAKA,UAAU,YAAf,SACI,sBAAKA,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,yBACA,mBAAGA,UAAU,YAAb,SAA0BkB,iBCtChDM,EAAQ,CACVE,QAAS,UACTC,SAAU,QACVC,IAAK,GACLC,MAAO,IAyBIC,EAlBe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAI7B,OAFAC,qBAAU,kBAAMC,YAAW,kBAAMF,GAAQ,KAAQ,OAAO,CAACA,IAGrD,qBAAKP,MAAOA,EAAOxB,UAAU,0DAA0DuB,KAAK,QAAQ,YAAU,YAAY,cAAY,OAAtI,SACI,sBAAKvB,UAAU,SAAf,UACI,qBAAKA,UAAU,aAAf,wDAGA,wBAAQO,QAAS,kBAAMwB,GAAQ,IAAQ1D,KAAK,SAAS2B,UAAU,wCAAwC,aAAW,gBCiCnHkC,eAFS,SAAC,GAAD,MAAgB,CAAEnD,MAAlB,EAAGA,SAEa,CACpCY,QCxDmB,SAACnB,GAAD,MAAW,CAC9BH,KAAMP,EACNW,QAASD,IDuDTmC,WC/CsB,SAAArC,GAAE,MAAK,CAC7BD,KAAML,EACNS,QAAS,CAAEH,QD8CX6D,SCrDoB,SAAA7D,GAAE,MAAK,CAC3BD,KAAMN,EACNU,QAAS,CAAEH,SDgDA4D,EA9CH,SAAC,GAA8C,IAA5CnD,EAA2C,EAA3CA,MAAOY,EAAoC,EAApCA,QAASwC,EAA2B,EAA3BA,SAAUxB,EAAiB,EAAjBA,WACrC,EAAgDf,oBAAS,GAAzD,mBAAOwC,EAAP,KAAyBC,EAAzB,KAyBA,OACI,gCACI,cAAC,EAAD,IACA,uBACA,cAAC,EAAD,CAAYlB,WARTpC,EAAMuD,QAAO,SAACC,EAAG3D,GAAJ,OAAa2D,EAAK3D,EAAKF,YAAY,GAQNwC,OAAQnC,EAAMR,SAC3D,uBACA,sBAAKyB,UAAU,YAAf,UACI,cAAC,EAAD,CAASL,QAzBc,SAACnB,GAChCmB,EAAQnB,GACR6D,GAAoB,MAwBZ,uBACA,cAAC,EAAD,CAAM1B,WAAYA,EAAY5B,MAAOA,EAAO6B,oBAAqBuB,IACjE,0BAEHC,GAAoB,cAAC,EAAD,CAAuBL,QAASM,U,MEpCjEG,IAASC,OACL,cAAC,IAAD,CAAUnD,MAAOA,EAAjB,SACI,cAAC,IAAD,CAAaoD,QAAS,KAAMlD,UAAWA,EAAvC,SACI,cAAC,EAAD,QAGRmD,SAASC,cAAc,Y","file":"static/js/main.a1233ac2.chunk.js","sourcesContent":["export const ADD_TODO = 'todos/add-todo'\r\nexport const MARK_TODO = 'todos/mark-todo'\r\nexport const DELETE_TODO = 'todos/delete-todo'","import {\r\n    ADD_TODO,\r\n    MARK_TODO,\r\n    DELETE_TODO\r\n} from './todos.action.types'\r\n\r\n\r\nconst initialState = [];\r\n\r\nconst todosReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_TODO: {\r\n            const id = state.length ? (state[state.length - 1].id + 1) : 1\r\n\r\n            return [\r\n                ...state,\r\n                {  id, name: action.payload, completed: false }\r\n            ];\r\n        }\r\n\r\n        case DELETE_TODO: {\r\n            const { id } = action.payload;\r\n            return [\r\n                ...state.filter(todo => todo.id !== id)\r\n            ]\r\n        }\r\n\r\n        case MARK_TODO: {\r\n            const { id } = action.payload;\r\n            return [\r\n                ...state.map(todo => todo.id === id ? { ...todo, completed: !todo.completed } : todo),\r\n            ]\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default todosReducer;","import { combineReducers } from \"redux\";\r\nimport todos from '../features/todos/todos.reducer'\r\n\r\nexport default combineReducers({ todos });","import { createStore } from \"redux\";\r\nimport { persistStore, persistReducer } from \"redux-persist\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\r\n\r\n\r\nexport const store = createStore(persistedReducer)\r\nexport const persistor = persistStore(store)","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst propTypes = {\r\n    addTodo: PropTypes.func\r\n}\r\n\r\nconst AddTodo = ({\r\n    addTodo\r\n}) => {\r\n    const [value, setValue] = useState('')\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === 'Enter')\r\n            addNewTodo()\r\n    }\r\n\r\n    const addNewTodo = () => {\r\n        if (value !== '') {\r\n            addTodo(value);\r\n            setValue('')\r\n        }\r\n    }\r\n\r\n    const inputChangeHandler = (inputEvent) => {\r\n        setValue(inputEvent.target.value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col-12\">\r\n                <div className=\"input-group\" onKeyPress={handleKeyPress}>\r\n                    <input type=\"text\" value={value} onChange={inputChangeHandler} className=\"form-control\" placeholder=\"Add a task...\" aria-label=\"Add a task...\" />\r\n                    <span className=\"input-group-btn\">\r\n                        <button className=\"btn btn-primary\" type=\"button\" onClick={addNewTodo} disabled={!value}>Add</button>\r\n                    </span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nAddTodo.propTypes = propTypes\r\nexport default AddTodo\r\n\r\n","import React from 'react';\r\n\r\nconst Header = () => (\r\n    \r\n    <nav className=\"navbar navbar-light bg-light justify-content-center\">\r\n        <div className=\"d-flex align-items-center container-full\">\r\n            <span className='fs-5'>📋 My tasks</span>\r\n        </div>\r\n    </nav>\r\n)\r\n\r\nexport default Header;","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst propTypes = {\r\n    id: PropTypes.oneOfType([\r\n        PropTypes.number,\r\n        PropTypes.string\r\n    ]),\r\n    name: PropTypes.string,\r\n    completed: PropTypes.bool,\r\n\r\n    deleteTodo: PropTypes.func,\r\n    markTodoAsCompleted: PropTypes.func,\r\n}\r\n\r\nconst Todo = ({\r\n    id,\r\n    name,\r\n    completed,\r\n    deleteTodo,\r\n    markTodoAsCompleted\r\n}) => {\r\n\r\n    const markCurrentAsCompleted = () => {\r\n        markTodoAsCompleted(id)\r\n    }\r\n\r\n\r\n    const done = completed ? (<del>{name}</del>) : name\r\n\r\n    return (\r\n\r\n        <li className=\"list-group-item\">\r\n\r\n            <div className=\"row\">\r\n\r\n                <div className=\"col-1 col-lg-1\">\r\n                    <label className=\"custom-control custom-checkbox mb-2 mr-sm-2 mb-sm-0\">\r\n                        <input type=\"checkbox\" checked={completed} className=\"custom-control-input\" onChange={markCurrentAsCompleted} />\r\n                        <span className=\"custom-control-indicator\"></span>\r\n                    </label>\r\n                    <div className=\"contaner\">\r\n\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-6 col-lg-6\">\r\n                    {done}\r\n                </div>\r\n\r\n                <div className=\"col-5 col-lg-5 d-flex justify-content-end\">\r\n                    <button type=\"button\" className=\"btn btn-danger btn-sm\" onClick={() => deleteTodo(id)}>Delete</button>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nTodo.propTypes = propTypes\r\nexport default Todo\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Todo from './Todo'\r\n\r\nconst propTypes = {\r\n    todos: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.number,\r\n            name: PropTypes.string,\r\n            completed: PropTypes.bool\r\n        })\r\n    ),\r\n    deleteTodo: PropTypes.func,\r\n    markTodoAsCompleted: PropTypes.func\r\n}\r\n\r\nconst List = ({ todos = [], deleteTodo, markTodoAsCompleted }) => {\r\n    const listItems = todos.map((todo) => (\r\n        <Todo\r\n            key={todo.id}\r\n            id={todo.id}\r\n            name={todo.name}\r\n            completed={todo.completed}\r\n\r\n            deleteTodo={deleteTodo}\r\n            markTodoAsCompleted={markTodoAsCompleted}\r\n        />\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            { todos.length ?\r\n                <ul className=\"list-group\">\r\n                    {listItems}\r\n                </ul> :\r\n\r\n                <p className='text-black-50'>No things todo available, add one by typing on the above field ⬆️</p>\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nList.propTypes = propTypes;\r\nexport default List;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst propTypes = {\r\n    nTodos: PropTypes.number,\r\n    nCompleted: PropTypes.number\r\n}\r\n\r\nconst Indicators = ({ nTodos = 0, nCompleted = 0 }) => {\r\n    const percent = ((nCompleted / nTodos) * 100) || 0;\r\n\r\n    const progressStyle = {\r\n        width: `${percent}%`,\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Completed tasks: {nCompleted}</h4>\r\n                            <div className=\"progress mb-2\">\r\n                                <div\r\n                                    className=\"progress-bar progress-bar-striped progress-bar-animated\"\r\n                                    role=\"progressbar\"\r\n                                    aria-valuenow={percent}\r\n                                    aria-valuemin=\"0\"\r\n                                    aria-valuemax=\"100\"\r\n                                    style={progressStyle}\r\n                                >\r\n                                    {percent.toFixed(1)}%\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                    <div className=\"card mb-1\">\r\n                        <div className=\"card-body\">\r\n                            <h4 className=\"card-title\">Total tasks</h4>\r\n                            <p className=\"card-text\">{nTodos}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nIndicators.propTypes = propTypes\r\nexport default Indicators\r\n","import { useEffect } from \"react\"\r\nimport PropTypes from 'prop-types'\r\n\r\nconst style = {\r\n    display: 'inherit',\r\n    position: 'fixed',\r\n    top: 30,\r\n    right: 10\r\n}\r\n\r\nconst propTypes = {\r\n    setShow: PropTypes.func\r\n}\r\n\r\nconst TodoAddedNotification = ({ setShow }) => {\r\n\r\n    useEffect(() => setTimeout(() => setShow(false), 2000), [setShow])\r\n\r\n    return (\r\n        <div style={style} className=\"toast align-items-center text-white bg-primary border-0\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n            <div className=\"d-flex\">\r\n                <div className=\"toast-body\">\r\n                    Successfully added a new task to the list.\r\n                </div>\r\n                <button onClick={() => setShow(false)} type=\"button\" className=\"btn-close btn-close-white me-2 m-auto\" aria-label=\"Close\"></button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nTodoAddedNotification.propTypes = propTypes\r\nexport default TodoAddedNotification\r\n","import React, { useState } from 'react';\r\n\r\nimport AddTodo from '../components/AddTodo';\r\nimport Header from '../components/Header';\r\nimport List from '../components/List';\r\nimport Indicators from '../components/Indicators';\r\nimport TodoAddedNotification from '../components/TodoAddedNotification';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { addTodo, markTodo, deleteTodo } from '../features/todos/todos.actions';\r\n\r\nconst App = ({ todos, addTodo, markTodo, deleteTodo }) => {\r\n    const [showNotification, setShowNotification] = useState(false)\r\n\r\n\r\n    /**\r\n     * \r\n     * @param {string} name \r\n     */\r\n    const addTodoAndShowNotification = (name) => {\r\n        addTodo(name)\r\n        setShowNotification(true)\r\n    }\r\n\r\n    /**\r\n     * \r\n     * @returns {{\r\n     *    id: number | string,\r\n     *    name: string,\r\n     *    completed: boolean\r\n     * }}\r\n     */\r\n    const getCompletedTodos = () => {\r\n        return todos.reduce((n, todo) => n + (todo.completed), 0)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <Header />\r\n            <br />\r\n            <Indicators nCompleted={getCompletedTodos()} nTodos={todos.length} />\r\n            <br />\r\n            <div className=\"container\">\r\n                <AddTodo addTodo={addTodoAndShowNotification} />\r\n                <br />\r\n                <List deleteTodo={deleteTodo} todos={todos} markTodoAsCompleted={markTodo} />\r\n                <br />\r\n            </div>\r\n            {showNotification && <TodoAddedNotification setShow={setShowNotification} />}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nconst mapStateToProps = ({ todos }) => ({ todos })\r\n\r\nexport default connect(mapStateToProps, {\r\n    addTodo,\r\n    deleteTodo,\r\n    markTodo\r\n})(App)\r\n","import { ADD_TODO, DELETE_TODO, MARK_TODO } from \"./todos.action.types\";\r\n\r\nexport const addTodo = (name) => ({\r\n    type: ADD_TODO,\r\n    payload: name\r\n});\r\n\r\nexport const markTodo = id => ({\r\n    type: MARK_TODO,\r\n    payload: { id }\r\n});\r\n\r\nexport const deleteTodo = id => ({\r\n    type: DELETE_TODO,\r\n    payload: { id }\r\n});","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n\r\nimport { store, persistor } from './store/store'\r\n\r\nimport App from './containers/App'\r\n\r\nimport './dependencies/bootstrap/css/bootstrap.min.css'\r\n\r\n/* Take this component's generated HTML and put it on the page (in the DOM) */\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <PersistGate loading={null} persistor={persistor}>\r\n            <App />\r\n        </PersistGate>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);\r\n"],"sourceRoot":""}